<!-- placeholder for form submission -->
<textarea name="recipe" id="recipe" class="hidden"></textarea>

<style>
    [contentEditable=true]:empty:not(:focus)::before{
        content:attr(placeholder);
        color: #888;
    }

    #recipeeditor:focus{
        outline:0;
    }
</style>

<!-- ingredients list -->
<a onClick="toggleIngredientsListOn()">
    <div id="ingredientlistbutton1" class="rounded-md bg-green-200 text-sm p-3 cursor-pointer">Ingredients List</div>
</a>
<a onClick="toggleIngredientsListOff()">
    <div id="ingredientlistbutton2" class="rounded-t-md bg-green-200 text-sm p-3 cursor-pointer hidden">Ingredients List</div>
</a>
<div id="ingredientlist" class="rounded-b-md text-sm border border-green-200 p-3 hidden">
    <span id="ingredientslistplaceholder">No ingredients!</span>
    <table id="ingredientstable" class="w-full table-fixed"></table>
</div>

<!-- wysiwyg editor -->
<div
    contenteditable="true"
    class="w-full m-1 p-4 rounded-md text-base whitespace-pre-line text-left"
    id="recipeeditor"
    placeholder="Type recipe here">{{recipe}}</div>

<div id="editmenu" class="hidden absolute rounded-md bg-slate-300 text-sm p-3 cursor-pointer">Ingredient</div>







<script type="text/javascript">
// global objects
const editmenu = document.getElementById("editmenu");
var ingredientslist = [];
const ingredientstable = document.getElementById("ingredientstable");
const ingredientslistplaceholder = document.getElementById("ingredientslistplaceholder");
var spanObj;


// ingredient list toggle
function toggleIngredientsListOn() {
    document.getElementById("ingredientlistbutton1").classList.add("hidden");
    document.getElementById("ingredientlistbutton2").classList.remove("hidden");
    document.getElementById("ingredientlist").classList.remove("hidden");
}

function toggleIngredientsListOff() {
    document.getElementById("ingredientlistbutton1").classList.remove("hidden");
    document.getElementById("ingredientlistbutton2").classList.add("hidden");
    document.getElementById("ingredientlist").classList.add("hidden");
}


// wysiwyg logic
function checkHighlight(e) {
    // this order is important - check the span:hover first before generally checking for highlighted text
    // this way, the correct menu shows up if you highlight the spanned text
    if (document.querySelectorAll( "span:hover" ).length > 0 && document.querySelectorAll( "span:hover" )[0].classList.contains("ingredient")) {
        // point to global var to the current span tag
        spanObj = document.querySelectorAll( "span:hover" )[0];

        editmenu.classList.remove("bg-slate-300");
        editmenu.classList.add("bg-green-400");
        editmenu.style.left = e.pageX + "px";
        editmenu.style.top = e.pageY + "px";
        editmenu.classList.remove("hidden");
    } else if (window.getSelection().toString()) {
        spanObj = null;

        editmenu.classList.add("bg-slate-300");
        editmenu.classList.remove("bg-green-400");
        editmenu.style.left = e.pageX + "px";
        editmenu.style.top = e.pageY + "px";
        editmenu.classList.remove("hidden");
    } else {
        spanObj = null;

        // hide context menu
        editmenu.classList.add("hidden");
    }
}

function setIngredient() {
    var highlighted_text = window.getSelection().toString();
    
    if (spanObj) {
        // this means it's an existing ingredient
        // remove the ingredient from the list
        var index = ingredientslist.indexOf(highlighted_text);
        ingredientslist.splice(index, 1);
        console.log(ingredientslist);

        // move the text outside of the span and then delete the span
        var parent = spanObj.parentNode;
        spanObj.outerHTML = spanObj.innerHTML;
        // TODO: this throws error "node to be removed is not child of this node"... but it works anyway?
        // it's creating empty spans... try trimming white space?
        // https://stackoverflow.com/questions/37025488/remove-whitespace-from-window-selection-in-js
        parent.removeChild(spanObj);
    } else {
        // this means we're highlighting new text
        // add the ingredient to the list if it's new
        if (!ingredientslist.includes(highlighted_text)) {
            ingredientslist.push(highlighted_text);
            console.log(ingredientslist);
        }

        // extract the text string and shove it into a span
        var selection = window.getSelection().getRangeAt(0);
        var selected_text = selection.extractContents();
        var span = document.createElement("span");
        span.classList.add("ingredient", "text-green-500");
        span.id = selected_text;
        span.appendChild(selected_text);
        selection.insertNode(span);
        window.getSelection().removeAllRanges();
    }

    // re-render the ingredients table
    populateIngredientsTable();

    // hide the context menu
    editmenu.classList.add("hidden");
}

function populateIngredientsTable() {
    console.log("Rendering table...")
    // drop all table rows
    ingredientstable.textContent = "";

    // add each ingredient as a row
    ingredientslist.forEach(ingredient => {
        var tr = document.createElement("tr");
        var tdLeft = document.createElement("td");
        tdLeft.classList.add("text-right", "p-2");
        var tdRight = document.createElement("td");
        tdRight.classList.add("p-2");

        var fieldLabel = document.createElement("span");
        fieldLabel.classList.add("text-sm", "text-green-500")
        fieldLabel.innerHTML = ingredient;
        tdLeft.appendChild(fieldLabel);

        var fieldQty = document.createElement("input");
        fieldQty.setAttribute("type", "text");
        fieldQty.setAttribute("name", "ingredientqty[]");
        fieldQty.setAttribute("placeholder", "(Optional) quantity");
        fieldQty.classList.add("w-full", "border-0", "text-sm");
        tdRight.appendChild(fieldQty);
        var fieldName = document.createElement("input");
        fieldName.setAttribute("type", "hidden");
        fieldName.setAttribute("name", "ingredientname[]");
        fieldName.setAttribute("value", ingredient);
        tdRight.appendChild(fieldName);

        tr.appendChild(tdLeft);
        tr.appendChild(tdRight);
        ingredientstable.appendChild(tr); 
    });

    // hide the placeholder text
    if (ingredientstable.childElementCount == 0) {
        ingredientslistplaceholder.classList.remove("hidden");
    } else {
        ingredientslistplaceholder.classList.add("hidden");
    }
}

// event listeners
document.onmouseup = checkHighlight;
editmenu.onmousedown = setIngredient;
</script>


